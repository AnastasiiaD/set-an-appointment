{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/training/get-news/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport apiHelper from '../utils/UiApiHelper';\nexport var Types = {\n  LOADING_URL: \"LOADING_URL\",\n  SAVE_URL_SUCCESS: \"SAVE_URL_SUCCESS\",\n  SAVE_URL_FAIL: \"SAVE_URL_FAIL\",\n  TEST_URL_SUCCESS: \"TEST_URL_SUCCESS\",\n  TEST_URL_FAIL: \"TEST_URL_FAIL\",\n  FAIL_NOTIFICATION: \"FAIL_NOTIFICATION\",\n  DONE_NOTIFICATION: \"DONE_NOTIFICATION\"\n};\nexport var failNotification = function failNotification(msg) {\n  return {\n    type: Types.FAIL_NOTIFICATION,\n    msg: msg\n  };\n};\nexport var doneNotification = function doneNotification(msg) {\n  return {\n    type: Types.DONE_NOTIFICATION,\n    msg: msg\n  };\n};\nexport var successTestResponse = function successTestResponse(payload) {\n  return {\n    type: Types.TEST_URL_SUCCESS,\n    payload: payload\n  };\n};\nexport var errorTestResponse = function errorTestResponse(payload) {\n  return {\n    type: Types.TEST_URL_FAIL,\n    payload: payload\n  };\n};\nexport var successSaveResponse = function successSaveResponse(payload) {\n  return {\n    type: Types.SAVE_URL_SUCCESS,\n    payload: payload\n  };\n};\nexport var errorSaveResponse = function errorSaveResponse(payload) {\n  return {\n    type: Types.SAVE_URL_FAIL,\n    payload: payload\n  };\n};\nexport var urlLoading = function urlLoading() {\n  return {\n    type: Types.LOADING_URL\n  };\n};\nexport var testUrl = function testUrl(url) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch(urlLoading());\n                _context.next = 4;\n                return apiHelper.testWebPage(url);\n\n              case 4:\n                result = _context.sent;\n                dispatch(successTestResponse(result.data));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(errorTestResponse(_context.t0.response));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var addUrl = function addUrl(url) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var _ref3, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                dispatch(urlLoading());\n                _context2.next = 4;\n                return apiHelper.saveWebPage(url);\n\n              case 4:\n                _ref3 = _context2.sent;\n                data = _ref3.data;\n                dispatch(successSaveResponse(data));\n                dispatch(doneNotification(\"\".concat(url, \" successfully added!\")));\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch(errorSaveResponse(_context2.t0));\n                dispatch(failNotification(_context2.t0.response.data.msg));\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/admin/training/get-news/src/actions/urlStatusesActions.js"],"names":["apiHelper","Types","LOADING_URL","SAVE_URL_SUCCESS","SAVE_URL_FAIL","TEST_URL_SUCCESS","TEST_URL_FAIL","FAIL_NOTIFICATION","DONE_NOTIFICATION","failNotification","msg","type","doneNotification","successTestResponse","payload","errorTestResponse","successSaveResponse","errorSaveResponse","urlLoading","testUrl","url","dispatch","testWebPage","result","data","response","addUrl","saveWebPage"],"mappings":"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","sourcesContent":["import apiHelper from '../utils/UiApiHelper';\n\nexport const Types = {\n    LOADING_URL: \"LOADING_URL\",\n\n    SAVE_URL_SUCCESS: \"SAVE_URL_SUCCESS\",\n    SAVE_URL_FAIL: \"SAVE_URL_FAIL\",\n\n    TEST_URL_SUCCESS: \"TEST_URL_SUCCESS\",\n    TEST_URL_FAIL: \"TEST_URL_FAIL\",\n\n    FAIL_NOTIFICATION: \"FAIL_NOTIFICATION\",\n    DONE_NOTIFICATION: \"DONE_NOTIFICATION\",\n};\n\nexport const failNotification = msg => ({\n    type: Types.FAIL_NOTIFICATION,\n    msg\n});\n\nexport const doneNotification = msg => ({\n    type: Types.DONE_NOTIFICATION,\n    msg\n});\n\nexport const successTestResponse = payload => ({\n    type: Types.TEST_URL_SUCCESS,\n    payload\n});\n\nexport const errorTestResponse = payload => ({\n    type: Types.TEST_URL_FAIL,\n    payload\n});\n\nexport const successSaveResponse = payload => ({\n    type: Types.SAVE_URL_SUCCESS,\n    payload\n});\n\nexport const errorSaveResponse = payload => ({\n    type: Types.SAVE_URL_FAIL,\n    payload\n});\n\nexport const urlLoading = () => ({\n    type: Types.LOADING_URL,\n});\n\nexport const testUrl = url => async dispatch => {\n    try {\n        dispatch(urlLoading());\n        const result = await apiHelper.testWebPage(url);\n        dispatch(successTestResponse(result.data));\n    } catch (err) {\n        dispatch(errorTestResponse(err.response));\n    }\n};\n\nexport const addUrl = url => async dispatch => {\n    try {\n        dispatch(urlLoading());\n        const { data } = await apiHelper.saveWebPage(url);\n        dispatch(successSaveResponse(data));\n        dispatch(doneNotification(`${url} successfully added!`));\n    } catch (err) {\n        dispatch(errorSaveResponse(err));\n        dispatch(failNotification(err.response.data.msg));\n    }\n};"]},"metadata":{},"sourceType":"module"}