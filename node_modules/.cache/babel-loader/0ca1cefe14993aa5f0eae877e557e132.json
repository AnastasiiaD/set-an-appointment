{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/training/get-news/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport apiHelper from \"../utils/UiApiHelper\";\nexport var Types = {\n  SET_WEATHER_IS_VALID: \"SET_WEATHER_IS_VALID\",\n  SET_WEATHER_IS_CHECKED: \"SET_WEATHER_IS_CHECKED\"\n};\nexport var isTokenValid = function isTokenValid(isValid) {\n  return {\n    type: Types.SET_WEATHER_IS_VALID,\n    isValid: isValid\n  };\n};\nexport var setWeatherIsValid = function setWeatherIsValid() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return apiHelper.checkToken();\n\n              case 3:\n                data = _context.sent;\n\n                if (data.status = 200) {\n                  dispatch(isTokenValid(true));\n                } else {\n                  dispatch(isTokenValid(false));\n                }\n\n                dispatch(setWeatherIsChecked(true));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                isTokenValid(false);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setWeatherIsChecked = function setWeatherIsChecked(isChecked) {\n  return {\n    type: Types.SET_WEATHER_IS_CHECKED,\n    isChecked: isChecked\n  };\n};","map":{"version":3,"sources":["/Users/admin/training/get-news/src/actions/tokenActions.js"],"names":["apiHelper","Types","SET_WEATHER_IS_VALID","SET_WEATHER_IS_CHECKED","isTokenValid","isValid","type","setWeatherIsValid","dispatch","checkToken","data","status","setWeatherIsChecked","isChecked"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,sBAAtB;AAEA,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,oBAAoB,EAAE,sBADL;AAEjBC,EAAAA,sBAAsB,EAAE;AAFP,CAAd;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAAEL,KAAK,CAACC,oBADwB;AAEpCG,IAAAA,OAAO,EAAPA;AAFoC,GAAL;AAAA,CAA5B;AAMP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEbR,SAAS,CAACS,UAAV,EAFa;;AAAA;AAE1BC,gBAAAA,IAF0B;;AAGhC,oBAAIA,IAAI,CAACC,MAAL,GAAc,GAAlB,EAAuB;AACnBH,kBAAAA,QAAQ,CAACJ,YAAY,CAAC,IAAD,CAAb,CAAR;AACH,iBAFD,MAEO;AACHI,kBAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACH;;AACAI,gBAAAA,QAAQ,CAACI,mBAAmB,CAAC,IAAD,CAApB,CAAR;AAR+B;AAAA;;AAAA;AAAA;AAAA;AAU/BR,gBAAAA,YAAY,CAAC,KAAD,CAAZ;;AAV+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAcP,OAAO,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,SAAS;AAAA,SAAK;AAC7CP,IAAAA,IAAI,EAAEL,KAAK,CAACE,sBADiC;AAE7CU,IAAAA,SAAS,EAATA;AAF6C,GAAL;AAAA,CAArC","sourcesContent":["import apiHelper from \"../utils/UiApiHelper\";\n\nexport const Types = {\n    SET_WEATHER_IS_VALID: \"SET_WEATHER_IS_VALID\",\n    SET_WEATHER_IS_CHECKED: \"SET_WEATHER_IS_CHECKED\",\n};\n\nexport const isTokenValid = isValid => ({\n    type: Types.SET_WEATHER_IS_VALID,\n    isValid\n});\n\n\nexport const setWeatherIsValid = () => async dispatch => {\n    try {\n       const data = await apiHelper.checkToken();\n       if (data.status = 200) {\n           dispatch(isTokenValid(true));\n       } else {\n           dispatch(isTokenValid(false));\n       }\n        dispatch(setWeatherIsChecked(true));\n    } catch {\n        isTokenValid(false);\n    }\n};\n\nexport const setWeatherIsChecked = isChecked => ({\n    type: Types.SET_WEATHER_IS_CHECKED,\n    isChecked,\n});"]},"metadata":{},"sourceType":"module"}