{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/admin/training/new service/src/route/list/Components/UrlsTable.js\";\nimport React, { memo } from \"react\";\nimport { Table, Button, Container, Header } from \"semantic-ui-react\";\n\nvar UrlsTable = function UrlsTable(_ref) {\n  var list = _ref.list,\n      onRemove = _ref.onRemove;\n\n  var listUrls = _toConsumableArray(list.values());\n\n  return React.createElement(\"section\", {\n    className: \"table-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"List of saved URLS\"), React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"ID\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"URL\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Server\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Date\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, listUrls.map(function (item) {\n    return React.createElement(Table.Row, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, item.id), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, item.url), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.serverName), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.createdAt), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: \"delete\",\n      onClick: function onClick() {\n        return onRemove(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: \"mail\",\n      onClick: function onClick() {\n        return console.log(\"mail\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  })))));\n};\n\nexport default memo(UrlsTable);","map":{"version":3,"sources":["/Users/admin/training/new service/src/route/list/Components/UrlsTable.js"],"names":["React","memo","Table","Button","Container","Header","UrlsTable","list","onRemove","listUrls","values","map","item","id","url","serverName","createdAt","console","log"],"mappings":"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","sourcesContent":["import React, { memo } from \"react\";\nimport { Table, Button, Container, Header } from \"semantic-ui-react\";\n\nconst UrlsTable = ({ list, onRemove }) => {\n    const listUrls =  [...list.values()];\n\n    return (\n        <section className=\"table-wrapper\">\n            <Container>\n                <Header as='h2'>List of saved URLS</Header>\n                <Table celled>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>ID</Table.HeaderCell>\n                            <Table.HeaderCell>URL</Table.HeaderCell>\n                            <Table.HeaderCell>Server</Table.HeaderCell>\n                            <Table.HeaderCell>Date</Table.HeaderCell>\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {listUrls.map( item => {\n                            return (\n                                <Table.Row key={item.id}>\n                                    <Table.Cell>{item.id}</Table.Cell>\n                                    <Table.Cell>{item.url}</Table.Cell>\n                                    <Table.Cell>{item.serverName}</Table.Cell>\n                                    <Table.Cell>{item.createdAt}</Table.Cell>\n                                    <Table.Cell>\n                                        <Button.Group basic size=\"small\">\n                                            <Button icon=\"delete\" onClick={() => onRemove(item.id)}/>\n                                            <Button icon=\"mail\" onClick={() => console.log(\"mail\")} />\n                                        </Button.Group>\n                                    </Table.Cell>\n                                </Table.Row>\n                            );\n                        })}\n                    </Table.Body>\n                </Table>\n            </Container>\n        </section>\n    );\n};\n\nexport default memo(UrlsTable);"]},"metadata":{},"sourceType":"module"}