{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport addUrls from \"../reducers/urlStatusesReducer\";\nimport listUrls from \"../reducers/urlListReducer\";\nimport words from \"../reducers/wordsReducer\";\nimport notifications from \"../reducers/notificationReducer\";\nimport token from \"../reducers/tokenReducer\";\nimport thunk from \"redux-thunk\";\nvar reducers = combineReducers({\n  addUrls: addUrls,\n  listUrls: listUrls,\n  notifications: notifications,\n  words: words,\n  token: token\n});\nexport default function configureStore() {\n  return createStore(reducers, applyMiddleware(logger, thunk));\n}\n;","map":{"version":3,"sources":["/Users/admin/training/get-news/src/store/store.js"],"names":["createStore","applyMiddleware","combineReducers","logger","addUrls","listUrls","words","notifications","token","thunk","reducers","configureStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAMC,QAAQ,GAAGR,eAAe,CAAC;AAC7BE,EAAAA,OAAO,EAAPA,OAD6B;AAE7BC,EAAAA,QAAQ,EAARA,QAF6B;AAG7BE,EAAAA,aAAa,EAAbA,aAH6B;AAI7BD,EAAAA,KAAK,EAALA,KAJ6B;AAK7BE,EAAAA,KAAK,EAALA;AAL6B,CAAD,CAAhC;AAQA,eAAe,SAASG,cAAT,GAA0B;AACvC,SAAOX,WAAW,CAACU,QAAD,EAAWT,eAAe,CAACE,MAAD,EAASM,KAAT,CAA1B,CAAlB;AACD;AAAA","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport addUrls from \"../reducers/urlStatusesReducer\";\nimport listUrls from \"../reducers/urlListReducer\";\nimport words from \"../reducers/wordsReducer\";\nimport notifications from \"../reducers/notificationReducer\";\nimport token from \"../reducers/tokenReducer\";\nimport thunk from \"redux-thunk\";\n\nconst reducers = combineReducers({\n    addUrls,\n    listUrls,\n    notifications,\n    words,\n    token,\n});\n\nexport default function configureStore() {\n  return createStore(reducers, applyMiddleware(logger, thunk));\n};"]},"metadata":{},"sourceType":"module"}