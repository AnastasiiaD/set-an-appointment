{"ast":null,"code":"import _classCallCheck from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/training/new service/src/route/list/UrlsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUrlList as _getUrlList, removeUrl as _removeUrl } from \"./../../actions/urlListActions\";\nimport UrlsTable from \"./Components/UrlsTable\";\nimport { HeaderBar } from \"../../common\";\nimport { Segment, Dimmer, Loader } from \"semantic-ui-react\";\n\nvar UrlsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UrlsList, _Component);\n\n  function UrlsList(props) {\n    var _this;\n\n    _classCallCheck(this, UrlsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UrlsList).call(this, props));\n\n    _this.handleRemoveUrl = function (id) {\n      var _this$props = _this.props,\n          list = _this$props.list,\n          removeUrl = _this$props.removeUrl;\n\n      if (list.has(id)) {\n        removeUrl(id);\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(UrlsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUrlList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isLoading = _this$props2.isLoading,\n          list = _this$props2.list,\n          history = _this$props2.history;\n      return React.createElement(\"section\", {\n        className: \"list-url-wrapper standard-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(HeaderBar, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), list && !!list.size && React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, isLoading && React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        inverted: true,\n        content: \"Loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(UrlsTable, {\n        list: list,\n        onRemove: this.handleRemoveUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UrlsList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var listUrls = _ref.listUrls;\n  return {\n    isLoading: listUrls.isLoading,\n    list: listUrls.list\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getUrlList: function getUrlList() {\n      return dispatch(_getUrlList());\n    },\n    removeUrl: function removeUrl(id) {\n      return dispatch(_removeUrl(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UrlsList);","map":{"version":3,"sources":["/Users/admin/training/new service/src/route/list/UrlsList.js"],"names":["React","Component","connect","getUrlList","removeUrl","UrlsTable","HeaderBar","Segment","Dimmer","Loader","UrlsList","props","handleRemoveUrl","id","list","has","state","isLoading","history","size","mapStateToProps","listUrls","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,SAAS,IAATA,UAArB,QAAsC,gCAAtC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,QAAwC,mBAAxC;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAUnBC,eAVmB,GAUD,UAAAC,EAAE,EAAI;AAAA,wBACQ,MAAKF,KADb;AAAA,UACZG,IADY,eACZA,IADY;AAAA,UACNV,SADM,eACNA,SADM;;AAGpB,UAAGU,IAAI,CAACC,GAAL,CAASF,EAAT,CAAH,EAAgB;AACZT,QAAAA,SAAS,CAACS,EAAD,CAAT;AACH;AACJ,KAhBkB;;AAGf,UAAKG,KAAL,GAAa,EAAb;AAHe;AAIlB;;;;wCAEmB;AAChB,WAAKL,KAAL,CAAWR,UAAX;AACH;;;6BAUQ;AAAA,yBACgC,KAAKQ,KADrC;AAAA,UACGM,SADH,gBACGA,SADH;AAAA,UACcH,IADd,gBACcA,IADd;AAAA,UACoBI,OADpB,gBACoBA,OADpB;AAEL,aACI;AAAS,QAAA,SAAS,EAAC,mCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAEA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKJ,IAAI,IAAI,CAAC,CAACA,IAAI,CAACK,IAAf,IACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,SAAS,IACN,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,OAAO,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,EAMI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEH,IAAjB;AAAuB,QAAA,QAAQ,EAAE,KAAKF,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAHR,CADJ;AAeH;;;;EApCkBX,S;;AAwCvB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,SAAiB;AACrCJ,IAAAA,SAAS,EAAEI,QAAQ,CAACJ,SADiB;AAErCH,IAAAA,IAAI,EAAEO,QAAQ,CAACP;AAFsB,GAAjB;AAAA,CAAxB;;AAIA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCpB,IAAAA,UAAU,EAAE;AAAA,aAAMoB,QAAQ,CAACpB,WAAU,EAAX,CAAd;AAAA,KADwB;AAEpCC,IAAAA,SAAS,EAAE,mBAAAS,EAAE;AAAA,aAAIU,QAAQ,CAACnB,UAAS,CAACS,EAAD,CAAV,CAAZ;AAAA;AAFuB,GAAL;AAAA,CAAnC;;AAKA,eAAeX,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUrlList, removeUrl } from \"./../../actions/urlListActions\";\nimport UrlsTable from \"./Components/UrlsTable\";\nimport { HeaderBar } from \"../../common\";\nimport { Segment, Dimmer, Loader } from \"semantic-ui-react\";\n\nclass UrlsList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        this.props.getUrlList();\n    }\n\n    handleRemoveUrl = id => {\n        const { list, removeUrl } = this.props;\n\n        if(list.has(id)){\n            removeUrl(id);\n        }\n    };\n\n    render() {\n        const { isLoading, list, history } = this.props;\n        return (\n            <section className=\"list-url-wrapper standard-wrapper\">\n                <HeaderBar history={history} />\n                {list && !!list.size && (\n                    <Segment>\n                        {isLoading && (\n                            <Dimmer active inverted>\n                                <Loader inverted content=\"Loading\" />\n                            </Dimmer>\n                        )}\n                        <UrlsTable list={list} onRemove={this.handleRemoveUrl} />\n                    </Segment>\n                )}\n            </section>\n        );\n    }\n}\n\n\nconst mapStateToProps = ({listUrls}) => ({\n    isLoading: listUrls.isLoading,\n    list: listUrls.list,\n});\nconst mapDispatchToProps = dispatch => ({\n    getUrlList: () => dispatch(getUrlList()),\n    removeUrl: id => dispatch(removeUrl(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UrlsList);\n"]},"metadata":{},"sourceType":"module"}