{"ast":null,"code":"import _classCallCheck from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/training/get-news/src/common/HeaderBar/HeaderBar.js\";\nimport React, { memo, Component } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { ROUTES, SIZES } from \"./../../constants\";\nimport apiHelper from \"./../../utils/UiApiHelper\";\nimport { connect } from \"react-redux\";\n\nvar HeaderBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HeaderBar, _Component);\n\n  function HeaderBar(props) {\n    var _this;\n\n    _classCallCheck(this, HeaderBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeaderBar).call(this, props));\n\n    _this.isCurrentPath = function (path) {\n      return path !== window.location.pathname;\n    };\n\n    _this.shouldShowBtn = function (checkMethod) {\n      return checkMethod();\n    };\n\n    _this.isLoggedIn = function () {\n      return _this.props.isTokenValid;\n    };\n\n    _this.handleLogOut = function (history) {\n      apiHelper.logoutUser().then(function () {\n        return history.push(ROUTES.SIGNIN);\n      }, function (err) {\n        return console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.props.history;\n      return React.createElement(\"section\", {\n        className: \"header-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.shouldShowBtn(this.isCurrentPath(ROUTES.HOME)) && React.createElement(Button, {\n        animated: true,\n        size: SIZES.LARGE,\n        onClick: function onClick() {\n          return history.push(ROUTES.HOME);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Button.Content, {\n        visible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Add URL\"), React.createElement(Button.Content, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))), this.shouldShowBtn(this.isCurrentPath(ROUTES.LIST)) && React.createElement(Button, {\n        animated: true,\n        size: SIZES.LARGE,\n        onClick: function onClick() {\n          return history.push(ROUTES.LIST);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button.Content, {\n        visible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"List of URLs\"), React.createElement(Button.Content, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"arrow right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), this.shouldShowBtn(this.isCurrentPath(ROUTES.WORDS)) && React.createElement(Button, {\n        animated: \"fade\",\n        size: SIZES.LARGE,\n        onClick: function onClick() {\n          return history.push(ROUTES.WORDS);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button.Content, {\n        visible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Stored Worlds\"), React.createElement(Button.Content, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"bullhorn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), this.shouldShowBtn(this.isLoggedIn()) && React.createElement(Button, {\n        animated: \"fade\",\n        size: SIZES.LARGE,\n        onClick: function onClick() {\n          return _this2.handleLogOut(history);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Button.Content, {\n        visible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Log out\"), React.createElement(Button.Content, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"log out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return HeaderBar;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var token = _ref.token;\n  return {\n    token: token\n  };\n};\n\nexport default memo(connect(mapStateToProps, null)(HeaderBar));","map":{"version":3,"sources":["/Users/admin/training/get-news/src/common/HeaderBar/HeaderBar.js"],"names":["React","memo","Component","Button","Icon","ROUTES","SIZES","apiHelper","connect","HeaderBar","props","isCurrentPath","path","window","location","pathname","shouldShowBtn","checkMethod","isLoggedIn","isTokenValid","handleLogOut","history","logoutUser","then","push","SIGNIN","err","console","error","HOME","LARGE","LIST","WORDS","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React, { memo, Component } from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { ROUTES, SIZES } from \"./../../constants\";\nimport apiHelper from \"./../../utils/UiApiHelper\";\nimport { connect } from \"react-redux\";\n\nclass HeaderBar extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    isCurrentPath = (path) => {\n        return path !== window.location.pathname;\n    };\n\n    shouldShowBtn = (checkMethod) => {\n        return checkMethod();\n    };\n\n    isLoggedIn = () => {\n        return this.props.isTokenValid;\n    };\n\n    handleLogOut = (history) => {\n        apiHelper.logoutUser().then(\n            () => history.push(ROUTES.SIGNIN),\n            err => console.error(err)\n        );\n    };\n\n    render(){\n        const { history } = this.props;\n        return (\n            <section className=\"header-bar\">\n                {this.shouldShowBtn(this.isCurrentPath(ROUTES.HOME)) && (\n                    <Button animated size={SIZES.LARGE} onClick={() => history.push(ROUTES.HOME)}>\n                        <Button.Content visible>Add URL</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name=\"save\" />\n                        </Button.Content>\n                    </Button>\n                )}\n\n                {this.shouldShowBtn(this.isCurrentPath(ROUTES.LIST)) && (\n                    <Button animated size={SIZES.LARGE} onClick={() => history.push(ROUTES.LIST)}>\n                        <Button.Content visible>List of URLs</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name=\"arrow right\" />\n                        </Button.Content>\n                    </Button>\n                )}\n\n                {this.shouldShowBtn(this.isCurrentPath(ROUTES.WORDS)) && (\n                    <Button animated=\"fade\" size={SIZES.LARGE} onClick={() => history.push(ROUTES.WORDS)}>\n                        <Button.Content visible>Stored Worlds</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name=\"bullhorn\" />\n                        </Button.Content>\n                    </Button>\n                )}\n\n                {this.shouldShowBtn(this.isLoggedIn()) && (\n                <Button animated=\"fade\" size={SIZES.LARGE} onClick={() => this.handleLogOut(history)}>\n                    <Button.Content visible>Log out</Button.Content>\n                    <Button.Content hidden>\n                        <Icon name=\"log out\" />\n                    </Button.Content>\n                </Button>\n                )}\n\n            </section>\n        );\n    }\n};\n\n\nconst mapStateToProps = ({token}) => ({\n    token,\n});\n\n\nexport default memo(connect(mapStateToProps, null)(HeaderBar));"]},"metadata":{},"sourceType":"module"}