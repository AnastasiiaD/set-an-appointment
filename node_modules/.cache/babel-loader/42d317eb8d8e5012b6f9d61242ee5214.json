{"ast":null,"code":"var _jsxFileName = \"/Users/admin/training/get-news/src/route/create/Components/UrlStatus.js\";\nimport React from \"react\";\nimport { Card, Label, Divider } from \"semantic-ui-react\";\nimport { COLORS } from \"../../../constants\";\nimport apiHelper from \"../../../utils/UiApiHelper\";\n\nfunction getThreeLatestUrls(list) {\n  return list.slice(0, 3);\n}\n\nexport default function UrlStatus(_ref) {\n  var statuses = _ref.statuses;\n  var list = getThreeLatestUrls(statuses);\n  return React.createElement(Card.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, list.map(function (item, index) {\n    if (!item) return null;\n    var color = item.statusCode === 200 ? COLORS.GREEN : item.statusCode === 404 ? COLORS.RED : COLORS.YELLOW;\n    var msg = item.statusMessage || \"WARNING\";\n    return React.createElement(Card, {\n      color: color,\n      fluid: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, (item.isSaved || item.isFailed) && React.createElement(Label, {\n      color: item.isSaved ? COLORS.BLUE : COLORS.RED,\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item.isSaved ? \"Saved\" : \"Failed\"), React.createElement(Card.Header, {\n      onClick: function onClick() {\n        return apiHelper.openUrlInNewTab(item.url);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item.url), item.serverName && React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Server name: \", item.serverName), React.createElement(Divider, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Status code: \", React.createElement(Label, {\n      color: color,\n      tag: true,\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, item.statusCode)), React.createElement(Divider, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Status message: \", React.createElement(Label, {\n      color: color,\n      tag: true,\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, msg))));\n  }), statuses.length > 3 && React.createElement(Card, {\n    fluid: true,\n    textAlign: \"center\",\n    color: COLORS.BLUE,\n    header: \"Show all list\",\n    onClick: function onClick() {\n      return console.log(\"show list of URLs: not implemented\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n;","map":{"version":3,"sources":["/Users/admin/training/get-news/src/route/create/Components/UrlStatus.js"],"names":["React","Card","Label","Divider","COLORS","apiHelper","getThreeLatestUrls","list","slice","UrlStatus","statuses","map","item","index","color","statusCode","GREEN","RED","YELLOW","msg","statusMessage","isSaved","isFailed","BLUE","openUrlInNewTab","url","serverName","length","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Label, Divider } from \"semantic-ui-react\";\nimport { COLORS } from \"../../../constants\";\nimport apiHelper from \"../../../utils/UiApiHelper\";\n\nfunction getThreeLatestUrls(list) {\n    return list.slice(0, 3);\n}\n\nexport default function UrlStatus({ statuses }) {\n    const list = getThreeLatestUrls(statuses);\n    return (\n        <Card.Group>\n            {list.map( (item, index)  => {\n                if(!item) return null;\n\n                const color = item.statusCode === 200\n                    ? COLORS.GREEN\n                    : item.statusCode === 404\n                        ? COLORS.RED\n                        : COLORS.YELLOW;\n                const msg = item.statusMessage || \"WARNING\";\n\n                return (\n                    <Card color={color} fluid key={index}>\n                        <Card.Content textAlign=\"left\">\n                            {(item.isSaved || item.isFailed) && (\n                                <Label color={item.isSaved ? COLORS.BLUE : COLORS.RED} className=\"float-right\">\n                                    {item.isSaved ? \"Saved\" : \"Failed\"}\n                                </Label>\n                            )}\n                            <Card.Header onClick={() => apiHelper.openUrlInNewTab(item.url)}>{item.url}</Card.Header>\n                            {item.serverName && <Card.Meta>Server name: {item.serverName}</Card.Meta>}\n                            <Divider inverted />\n                            <Card.Description>\n                                Status code: <Label color={color} tag className=\"float-right\">{item.statusCode}</Label>\n                            </Card.Description>\n                            <Divider inverted />\n                            <Card.Description>\n                                Status message: <Label color={color} tag className=\"float-right\">{msg}</Label>\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                )})\n            }\n            {statuses.length > 3 && (\n                <Card\n                    fluid\n                    textAlign=\"center\"\n                    color={COLORS.BLUE}\n                    header=\"Show all list\"\n                    onClick={() => console.log(\"show list of URLs: not implemented\")} />\n            )}\n        </Card.Group>\n    );\n};"]},"metadata":{},"sourceType":"module"}