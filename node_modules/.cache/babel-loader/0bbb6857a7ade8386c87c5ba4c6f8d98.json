{"ast":null,"code":"import _regeneratorRuntime from \"/Users/admin/training/get-news/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport apiHelper from \"../utils/UiApiHelper\";\nexport var Types = {\n  LOADING_LIST: \"LOADING_LIST\",\n  GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n  GET_LIST_FAIL: \"GET_LIST_FAIL\",\n  REMOVE_URL_SUCCESS: \"REMOVE_URL_SUCCESS\",\n  REMOVE_URL_FAIL: \"REMOVE_URL_FAILED\",\n  REMOVE_URL_DONE_NOTIFICATION: \"REMOVE_URL_DONE_NOTIFICATION\",\n  REMOVE_URL_FAIL_NOTIFICATION: \"REMOVE_URL_FAIL_NOTIFICATION\"\n};\nexport var successRemoveUrlNotification = function successRemoveUrlNotification(msg) {\n  return {\n    type: Types.REMOVE_URL_DONE_NOTIFICATION,\n    msg: msg\n  };\n};\nexport var failRemoveUrlNotification = function failRemoveUrlNotification(msg) {\n  return {\n    type: Types.REMOVE_URL_FAIL_NOTIFICATION,\n    msg: msg\n  };\n};\nexport var successGetListResponse = function successGetListResponse(payload) {\n  return {\n    type: Types.GET_LIST_SUCCESS,\n    payload: payload\n  };\n};\nexport var errorGetListResponse = function errorGetListResponse(payload) {\n  return {\n    type: Types.GET_LIST_FAIL,\n    payload: payload\n  };\n};\nexport var listLoading = function listLoading() {\n  return {\n    type: Types.LOADING_LIST\n  };\n};\nexport var removeUrlSuccessfully = function removeUrlSuccessfully(id) {\n  return {\n    type: Types.REMOVE_URL_SUCCESS,\n    id: id\n  };\n};\nexport var removeUrlFail = function removeUrlFail() {\n  return {\n    type: Types.REMOVE_URL_FAIL\n  };\n};\nexport var getUrlList = function getUrlList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch(listLoading());\n                _context.next = 4;\n                return apiHelper.getListOfUrls();\n\n              case 4:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                dispatch(successGetListResponse(data));\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(errorGetListResponse(_context.t0));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var removeUrl = function removeUrl(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var _ref4, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                dispatch(listLoading());\n                _context2.next = 4;\n                return apiHelper.deleteUrlById(id);\n\n              case 4:\n                _ref4 = _context2.sent;\n                data = _ref4.data;\n                dispatch(successRemoveUrlNotification(\"Url with id: \".concat(id, \" successfully removed!\")));\n                dispatch(removeUrlSuccessfully(id));\n                _context2.next = 15;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n                dispatch(failRemoveUrlNotification(_context2.t0.response.data.msg));\n                dispatch(removeUrlFail());\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/admin/training/get-news/src/actions/urlListActions.js"],"names":["apiHelper","Types","LOADING_LIST","GET_LIST_SUCCESS","GET_LIST_FAIL","REMOVE_URL_SUCCESS","REMOVE_URL_FAIL","REMOVE_URL_DONE_NOTIFICATION","REMOVE_URL_FAIL_NOTIFICATION","successRemoveUrlNotification","msg","type","failRemoveUrlNotification","successGetListResponse","payload","errorGetListResponse","listLoading","removeUrlSuccessfully","id","removeUrlFail","getUrlList","dispatch","getListOfUrls","data","removeUrl","deleteUrlById","console","log","response"],"mappings":"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","sourcesContent":["import apiHelper from \"../utils/UiApiHelper\";\n\nexport const Types = {\n    LOADING_LIST: \"LOADING_LIST\",\n\n    GET_LIST_SUCCESS: \"GET_LIST_SUCCESS\",\n    GET_LIST_FAIL: \"GET_LIST_FAIL\",\n\n    REMOVE_URL_SUCCESS: \"REMOVE_URL_SUCCESS\",\n    REMOVE_URL_FAIL: \"REMOVE_URL_FAILED\",\n\n    REMOVE_URL_DONE_NOTIFICATION: \"REMOVE_URL_DONE_NOTIFICATION\",\n    REMOVE_URL_FAIL_NOTIFICATION: \"REMOVE_URL_FAIL_NOTIFICATION\",\n};\n\nexport const successRemoveUrlNotification = msg => ({\n    type: Types.REMOVE_URL_DONE_NOTIFICATION,\n    msg\n});\n\nexport const failRemoveUrlNotification = msg => ({\n    type: Types.REMOVE_URL_FAIL_NOTIFICATION,\n    msg\n});\n\nexport const successGetListResponse = payload => ({\n    type: Types.GET_LIST_SUCCESS,\n    payload\n});\n\nexport const errorGetListResponse = payload => ({\n    type: Types.GET_LIST_FAIL,\n    payload\n});\n\nexport const listLoading = () => ({\n    type: Types.LOADING_LIST,\n});\n\nexport const removeUrlSuccessfully = id=> ({\n    type: Types.REMOVE_URL_SUCCESS,\n    id\n});\nexport const removeUrlFail = () => ({\n    type: Types.REMOVE_URL_FAIL,\n});\n\nexport const getUrlList = () => async dispatch => {\n    try {\n        dispatch(listLoading());\n        const { data } = await apiHelper.getListOfUrls();\n        dispatch(successGetListResponse(data));\n    } catch (err) {\n        dispatch(errorGetListResponse(err));\n    }\n};\n\nexport const removeUrl = id => async dispatch => {\n    try {\n        dispatch(listLoading());\n        const { data } = await apiHelper.deleteUrlById(id);\n        dispatch(successRemoveUrlNotification(`Url with id: ${id} successfully removed!`));\n        dispatch(removeUrlSuccessfully(id));\n    } catch (err) {\n        console.log(err);\n        dispatch(failRemoveUrlNotification(err.response.data.msg));\n        dispatch(removeUrlFail());\n    }\n};"]},"metadata":{},"sourceType":"module"}