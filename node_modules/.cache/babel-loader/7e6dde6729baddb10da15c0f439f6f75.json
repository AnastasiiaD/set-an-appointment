{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/admin/training/get-news/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Types } from \"../actions/urlStatusesActions\";\nimport StatusesHelper from \"./../utils/StatusesHelper\";\nvar defaultState = {\n  statuses: [],\n  isLoading: false\n};\n\nvar addUrls = function addUrls() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Types.LOADING_URL:\n      return Object.assign({}, _objectSpread({}, state), {\n        isLoading: true\n      });\n\n    case Types.TEST_URL_FAIL:\n      return Object.assign({}, _objectSpread({}, state), {\n        isLoading: false\n      }, {\n        statuses: [{\n          url: action.payload.data.hostname,\n          statusCode: action.payload.status,\n          statusMessage: action.payload.statusText\n        }].concat(_toConsumableArray(state.statuses))\n      });\n\n    case Types.TEST_URL_SUCCESS:\n      return Object.assign({}, _objectSpread({}, state), {\n        isLoading: false\n      }, {\n        statuses: [action.payload].concat(_toConsumableArray(state.statuses))\n      });\n\n    case Types.SAVE_URL_SUCCESS:\n      return Object.assign({}, _objectSpread({}, state), {\n        isLoading: false\n      }, {\n        statuses: StatusesHelper.markStatusesAsSaved(state.statuses, action.payload.url, action.payload.serverName)\n      });\n\n    case Types.SAVE_URL_FAIL:\n      return Object.assign({}, _objectSpread({}, state), {\n        isLoading: false\n      }, {\n        statuses: StatusesHelper.markStatusesAsFailed(state.statuses, action.payload.url, action.payload.serverName)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default addUrls;","map":{"version":3,"sources":["/Users/admin/training/get-news/src/reducers/urlStatusesReducer.js"],"names":["Types","StatusesHelper","defaultState","statuses","isLoading","addUrls","state","action","type","LOADING_URL","Object","assign","TEST_URL_FAIL","url","payload","data","hostname","statusCode","status","statusMessage","statusText","TEST_URL_SUCCESS","SAVE_URL_SUCCESS","markStatusesAsSaved","serverName","SAVE_URL_FAIL","markStatusesAsFailed"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,WAAX;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAsBL,KAAtB,GAA8B;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAA9B,CAAP;;AACJ,SAAKJ,KAAK,CAACY,aAAX;AACI,aAAOF,MAAM,CAACC,MAAP,CACH,EADG,oBAECL,KAFD,GAGH;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAHG,EAIH;AAACD,QAAAA,QAAQ,GAAG;AACJU,UAAAA,GAAG,EAAEN,MAAM,CAACO,OAAP,CAAeC,IAAf,CAAoBC,QADrB;AAEJC,UAAAA,UAAU,EAAEV,MAAM,CAACO,OAAP,CAAeI,MAFvB;AAGJC,UAAAA,aAAa,EAAEZ,MAAM,CAACO,OAAP,CAAeM;AAH1B,SAAH,4BAICd,KAAK,CAACH,QAJP;AAAT,OAJG,CAAP;;AASJ,SAAKH,KAAK,CAACqB,gBAAX;AACI,aAAOX,MAAM,CAACC,MAAP,CACH,EADG,oBAECL,KAFD,GAGH;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAHG,EAIH;AAACD,QAAAA,QAAQ,GAAGI,MAAM,CAACO,OAAV,4BAAsBR,KAAK,CAACH,QAA5B;AAAT,OAJG,CAAP;;AAMJ,SAAKH,KAAK,CAACsB,gBAAX;AACI,aAAOZ,MAAM,CAACC,MAAP,CACH,EADG,oBAECL,KAFD,GAGH;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAHG,EAIH;AAACD,QAAAA,QAAQ,EAAEF,cAAc,CAACsB,mBAAf,CAAmCjB,KAAK,CAACH,QAAzC,EAAmDI,MAAM,CAACO,OAAP,CAAeD,GAAlE,EAAuEN,MAAM,CAACO,OAAP,CAAeU,UAAtF;AAAX,OAJG,CAAP;;AAMJ,SAAKxB,KAAK,CAACyB,aAAX;AACI,aAAOf,MAAM,CAACC,MAAP,CACH,EADG,oBAECL,KAFD,GAGH;AAACF,QAAAA,SAAS,EAAE;AAAZ,OAHG,EAIH;AAACD,QAAAA,QAAQ,EAAEF,cAAc,CAACyB,oBAAf,CAAoCpB,KAAK,CAACH,QAA1C,EAAoDI,MAAM,CAACO,OAAP,CAAeD,GAAnE,EAAwEN,MAAM,CAACO,OAAP,CAAeU,UAAvF;AAAX,OAJG,CAAP;;AAMJ;AACI,aAAOlB,KAAP;AAnCR;AAqCH,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import { Types } from \"../actions/urlStatusesActions\";\nimport StatusesHelper from \"./../utils/StatusesHelper\";\n\nconst defaultState = {\n    statuses: [],\n    isLoading: false,\n};\n\nconst addUrls = (state = defaultState, action) => {\n    switch (action.type) {\n        case Types.LOADING_URL:\n            return Object.assign({}, {...state}, {isLoading: true} );\n        case Types.TEST_URL_FAIL:\n            return Object.assign(\n                {},\n                {...state},\n                {isLoading: false},\n                {statuses: [{\n                        url: action.payload.data.hostname,\n                        statusCode: action.payload.status,\n                        statusMessage: action.payload.statusText,\n                    }, ...state.statuses]});\n        case Types.TEST_URL_SUCCESS:\n            return Object.assign(\n                {},\n                {...state},\n                {isLoading: false},\n                {statuses: [action.payload, ...state.statuses ]});\n\n        case Types.SAVE_URL_SUCCESS:\n            return Object.assign(\n                {},\n                {...state},\n                {isLoading: false},\n                {statuses: StatusesHelper.markStatusesAsSaved(state.statuses, action.payload.url, action.payload.serverName)} );\n\n        case Types.SAVE_URL_FAIL:\n            return Object.assign(\n                {},\n                {...state},\n                {isLoading: false},\n                {statuses: StatusesHelper.markStatusesAsFailed(state.statuses, action.payload.url, action.payload.serverName)} );\n\n        default:\n            return state;\n    }\n};\n\nexport default addUrls;"]},"metadata":{},"sourceType":"module"}