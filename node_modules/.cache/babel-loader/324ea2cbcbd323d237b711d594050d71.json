{"ast":null,"code":"import _objectSpread from \"/Users/admin/training/new service/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { Types as TokenTypes } from \"../actions/tokenActions\";\nvar defaultState = {\n  isTokenValid: false,\n  isChecked: false\n};\n\nvar token = function token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TokenTypes.SET_WHETHER_IS_VALID:\n      return Object.assign({}, _objectSpread({}, state), {\n        isTokenValid: action.isValid\n      });\n\n    case TokenTypes.SET_WHETHER_IS_CHECKED:\n      return Object.assign({}, _objectSpread({}, state), {\n        isChecked: action.isChecked\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default token;","map":{"version":3,"sources":["/Users/admin/training/new service/src/reducers/tokenReducer.js"],"names":["Types","TokenTypes","defaultState","isTokenValid","isChecked","token","state","action","type","SET_WHETHER_IS_VALID","Object","assign","isValid","SET_WHETHER_IS_CHECKED"],"mappings":";AAAA,SAASA,KAAK,IAAIC,UAAlB,QAAoC,yBAApC;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,KADG;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,UAAU,CAACQ,oBAAhB;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAsBL,KAAtB,GAA8B;AAACH,QAAAA,YAAY,EAAEI,MAAM,CAACK;AAAtB,OAA9B,CAAP;;AACJ,SAAKX,UAAU,CAACY,sBAAhB;AACI,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,oBAAsBL,KAAtB,GAA8B;AAACF,QAAAA,SAAS,EAAEG,MAAM,CAACH;AAAnB,OAA9B,CAAP;;AACJ;AACI,aAAOE,KAAP;AANR;AAQH,CATD;;AAWA,eAAeD,KAAf","sourcesContent":["import { Types as TokenTypes } from \"../actions/tokenActions\";\n\n\nconst defaultState = {\n    isTokenValid: false,\n    isChecked: false,\n};\n\nconst token = (state = defaultState, action) => {\n    switch (action.type) {\n        case TokenTypes.SET_WHETHER_IS_VALID:\n            return Object.assign({}, {...state}, {isTokenValid: action.isValid} );\n        case TokenTypes.SET_WHETHER_IS_CHECKED:\n            return Object.assign({}, {...state}, {isChecked: action.isChecked} );\n        default:\n            return state;\n    }\n};\n\nexport default token;"]},"metadata":{},"sourceType":"module"}